import numpy as np

from quantum_masala.core import GField, rho_check


def hartree_compute(rho: GField) -> tuple[GField, float]:
    """Computes the hartree potential generated by input density and its
    contribution to total energy

    Parameters
    ----------
    rho : GField
        Input electron density
    Returns
    -------
    v_hart : GField
        Hartree Potential. Has shape (1,) as it is spin-independent.
    en_hart : float
        Hartree contribution to total energy (per unit cell).
    """
    rho_check(rho)
    grho = rho.gspc
    v_hart = GField(grho, 1)
    v_hart.g[:, 0] = 0
    v_hart.g[:, 1:] = 4*np.pi * np.sum(rho.g, axis=0)[1:] / rho.gspc.norm2[1:]
    en_hart = 0.5 * sum(rho.integrate_r(v_hart))
    return v_hart, en_hart.real
